
user  root;
worker_processes  9;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;

worker_rlimit_nofile 500000;

events {
    use epoll;
    worker_connections  500000;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    charset utf-8;
    log_format  main  '$remote_addr - $remote_user [$time_iso8601] '
                  '$status $body_bytes_sent $request_time $upstream_addr $upstream_status $upstream_response_time'
                    '"$request" "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    tcp_nopush on;
    
    #keepalive_timeout  0;
    keepalive_timeout  75;
    #proxy_connect_timeout 10;
    #proxy_send_timeout 10;
    proxy_read_timeout 30;
    #gzip  on;
    tcp_nodelay on;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    gzip on; 
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream websocket {
        ip_hash;
        server localhost:3000;  
        server localhost:3001;
        server localhost:3002;
        server localhost:3003;
        server localhost:3004;
        server localhost:3005;
        server localhost:3006;
        server localhost:3007;
    }
    
    upstream admin {
        server 10.150.244.12:8888;
    }


    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://websocket;
           
            #proxy_pass http://localhost:3100/; 	    
            
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        location /admin/ {
            index index.jsp;
            proxy_pass   http://admin/;    #在这里设置一个代理，和upstream的名字一样
            #以下是一些反向代理的配置可删除
            proxy_redirect             off; 
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header           Host $host; 
            proxy_set_header           X-Real-IP $remote_addr; 
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for; 
            client_max_body_size       10m; #允许客户端请求的最大单文件字节数
            client_body_buffer_size    128k; #缓冲区代理缓冲用户端请求的最大字节数
            proxy_connect_timeout      300; #nginx跟后端服务器连接超时时间(代理连接超时)
            proxy_send_timeout         300; #后端服务器数据回传时间(代理发送超时)
            proxy_read_timeout         300; #连接成功后，后端服务器响应时间(代理接收超时)
            proxy_buffer_size          4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
            proxy_buffers              4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
            proxy_busy_buffers_size    64k; #高负荷下缓冲大小（proxy_buffers*2）
            proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }

    }

}
